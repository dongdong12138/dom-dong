{"id":"main.js","dependencies":[],"generated":{"js":"// const test = jQuery('.test')\n// test.addClass('red').addClass('border')     // 链式操作，关键在于 api 对象中的函数再次返回了 api 对象\n\n// const $child = jQuery('.test').find('.child')\n// console.log('$child:', $child)\n\n// jQuery('.test')\n//     .addClass('red')\n//     .find('.child')\n//     .addClass('green')\n//     .addClass('blue')\n//     .end()\n//     .addClass('yellow')\n//     .addClass('purple')\n\n// jQuery('.test').find('.child').each((value, index) => {\n//     console.log(value, index)\n// })\n\n// const x = jQuery('.child').parent()\n// x.print()\n\n// const x = jQuery('.test').children()\n// x.print()\n\n// const x = $('.test').children()\n// x.print()\n\n// console.log($('.test').get(2))\n\nvar $p = $('<p>=========</p>')[0];\n$('.test').appendTo($p);","map":{"mappings":[{"generated":{"line":1,"column":0},"source":"main.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"main.js","original":{"line":2,"column":0}},{"generated":{"line":4,"column":0},"source":"main.js","original":{"line":4,"column":0}},{"generated":{"line":5,"column":0},"source":"main.js","original":{"line":5,"column":0}},{"generated":{"line":7,"column":0},"source":"main.js","original":{"line":7,"column":0}},{"generated":{"line":8,"column":0},"source":"main.js","original":{"line":8,"column":0}},{"generated":{"line":9,"column":0},"source":"main.js","original":{"line":9,"column":0}},{"generated":{"line":10,"column":0},"source":"main.js","original":{"line":10,"column":0}},{"generated":{"line":11,"column":0},"source":"main.js","original":{"line":11,"column":0}},{"generated":{"line":12,"column":0},"source":"main.js","original":{"line":12,"column":0}},{"generated":{"line":13,"column":0},"source":"main.js","original":{"line":13,"column":0}},{"generated":{"line":14,"column":0},"source":"main.js","original":{"line":14,"column":0}},{"generated":{"line":16,"column":0},"source":"main.js","original":{"line":16,"column":0}},{"generated":{"line":17,"column":0},"source":"main.js","original":{"line":17,"column":0}},{"generated":{"line":18,"column":0},"source":"main.js","original":{"line":18,"column":0}},{"generated":{"line":20,"column":0},"source":"main.js","original":{"line":20,"column":0}},{"generated":{"line":21,"column":0},"source":"main.js","original":{"line":21,"column":0}},{"generated":{"line":23,"column":0},"source":"main.js","original":{"line":23,"column":0}},{"generated":{"line":24,"column":0},"source":"main.js","original":{"line":24,"column":0}},{"generated":{"line":26,"column":0},"source":"main.js","original":{"line":26,"column":0}},{"generated":{"line":27,"column":0},"source":"main.js","original":{"line":27,"column":0}},{"generated":{"line":29,"column":0},"source":"main.js","original":{"line":29,"column":0}},{"generated":{"line":31,"column":0},"source":"main.js","original":{"line":31,"column":0}},{"name":"$p","generated":{"line":31,"column":4},"source":"main.js","original":{"line":31,"column":6}},{"name":"$","generated":{"line":31,"column":9},"source":"main.js","original":{"line":31,"column":11}},{"generated":{"line":31,"column":11},"source":"main.js","original":{"line":31,"column":13}},{"generated":{"line":31,"column":29},"source":"main.js","original":{"line":31,"column":11}},{"generated":{"line":31,"column":31},"source":"main.js","original":{"line":31,"column":33}},{"generated":{"line":31,"column":32},"source":"main.js","original":{"line":31,"column":11}},{"generated":{"line":31,"column":33},"source":"main.js","original":{"line":31,"column":0}},{"name":"$","generated":{"line":32,"column":0},"source":"main.js","original":{"line":32,"column":0}},{"generated":{"line":32,"column":2},"source":"main.js","original":{"line":32,"column":2}},{"generated":{"line":32,"column":9},"source":"main.js","original":{"line":32,"column":0}},{"name":"appendTo","generated":{"line":32,"column":11},"source":"main.js","original":{"line":32,"column":11}},{"generated":{"line":32,"column":19},"source":"main.js","original":{"line":32,"column":0}},{"name":"$p","generated":{"line":32,"column":20},"source":"main.js","original":{"line":32,"column":20}},{"generated":{"line":32,"column":22},"source":"main.js","original":{"line":32,"column":0}}],"sources":{"main.js":"// const test = jQuery('.test')\r\n// test.addClass('red').addClass('border')     // 链式操作，关键在于 api 对象中的函数再次返回了 api 对象\r\n\r\n// const $child = jQuery('.test').find('.child')\r\n// console.log('$child:', $child)\r\n\r\n// jQuery('.test')\r\n//     .addClass('red')\r\n//     .find('.child')\r\n//     .addClass('green')\r\n//     .addClass('blue')\r\n//     .end()\r\n//     .addClass('yellow')\r\n//     .addClass('purple')\r\n\r\n// jQuery('.test').find('.child').each((value, index) => {\r\n//     console.log(value, index)\r\n// })\r\n\r\n// const x = jQuery('.child').parent()\r\n// x.print()\r\n\r\n// const x = jQuery('.test').children()\r\n// x.print()\r\n\r\n// const x = $('.test').children()\r\n// x.print()\r\n\r\n// console.log($('.test').get(2))\r\n\r\nconst $p = $('<p>=========</p>')[0]\r\n$('.test').appendTo($p)"},"lineCount":null}},"hash":"297b8699e85e4c2071dc3e16e40a1595","cacheData":{"env":{}}}